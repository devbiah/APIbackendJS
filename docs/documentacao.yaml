openapi: 3.0.3
info:
  title: MarketPlace API
  description: API para gerenciar clientes e produtos, incluindo autenticação, cadastro e manipulação de dados.
  version: 1.0.0

paths:
  /auth/login:
    post:
      summary: Autentica o cliente e retorna um token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: cliente@exemplo.com
                senha:
                  type: string
                  example: SenhaSegura123
      responses:
        '200':
          description: Login bem-sucedido e retorno de token JWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '404':
          description: Cliente não encontrado
        '400':
          description: E-mail ou senha não fornecidos

  /auth/logout:
    post:
      summary: Realiza o logout do cliente, expirando o token
      responses:
        '200':
          description: Logout bem-sucedido
        '400':
          description: Token ausente ou inválido

  /clientes:
    get:
      summary: Retorna a lista de clientes
      responses:
        '200':
          description: Lista de clientes retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    nome:
                      type: string
                    email:
                      type: string
                    senha:
                      type: string
        '500':
          description: Erro no servidor

    post:
      summary: Cria um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: João Silva
                email:
                  type: string
                  example: joao@exemplo.com
                senha:
                  type: string
                  example: SenhaSegura123
      responses:
        '201':
          description: Cliente criado com sucesso
        '400':
          description: Dados obrigatórios não informados
        '500':
          description: Erro no servidor

  /clientes/{id}:
    get:
      summary: Retorna os detalhes de um cliente específico
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID do cliente
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  nome:
                    type: string
                  email:
                    type: string
                  senha:
                    type: string
        '404':
          description: Cliente não encontrado
        '500':
          description: Erro no servidor

    put:
      summary: Atualiza os dados de um cliente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: João Silva
                email:
                  type: string
                  example: joao@exemplo.com
                senha:
                  type: string
                  example: NovaSenha123
      responses:
        '200':
          description: Cliente atualizado com sucesso
        '404':
          description: Cliente não encontrado
        '500':
          description: Erro no servidor

    delete:
      summary: Deleta um cliente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cliente deletado com sucesso
        '404':
          description: Cliente não encontrado
        '500':
          description: Erro no servidor

  /produtos:
    get:
      summary: Retorna a lista de produtos
      responses:
        '200':
          description: Lista de produtos retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    nome:
                      type: string
                    preco:
                      type: number
        '500':
          description: Erro no servidor

    post:
      summary: Cria um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: Produto Exemplo
                preco:
                  type: number
                  example: 19.99
      responses:
        '201':
          description: Produto criado com sucesso
        '400':
          description: Dados obrigatórios não informados
        '500':
          description: Erro no servidor

  /produtos/{id}:
    get:
      summary: Retorna os detalhes de um produto específico
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  nome:
                    type: string
                  preco:
                    type: number
        '404':
          description: Produto não encontrado
        '500':
          description: Erro no servidor

    put:
      summary: Atualiza os dados de um produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  example: Produto Atualizado
                preco:
                  type: number
                  example: 29.99
      responses:
        '200':
          description: Produto atualizado com sucesso
        '404':
          description: Produto não encontrado
        '500':
          description: Erro no servidor

    delete:
      summary: Deleta um produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Produto deletado com sucesso
        '404':
          description: Produto não encontrado
        '500':
          description: Erro no servidor
